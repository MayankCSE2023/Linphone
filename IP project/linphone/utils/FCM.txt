// -------------------------------------------------------------------------------
        FirebaseMessaging.getInstance().token
            .addOnCompleteListener(
                OnCompleteListener { task ->
                    if (!task.isSuccessful) {
                        android.util.Log.d(
                            "FCM Notify",
                            "Fetching FCM registration token failed",
                            task.exception
                        )
                        return@OnCompleteListener
                    }

                    // Get new FCM registration token
                    val token: String? = task.result
                    android.util.Log.d("FCM Token", token, task.exception)
                    Toast.makeText(this, token, Toast.LENGTH_SHORT).show()
                }
            )
        
// -------------------------------------------------------------------------------


{
  "project_info": {
    "project_number": "929724111839",
    "firebase_url": "https://linphone-android-8a563.firebaseio.com",
    "project_id": "linphone-android-8a563",
    "storage_bucket": "linphone-android-8a563.appspot.com"
  },
  "client": [
    {
      "client_info": {
        "mobilesdk_app_id": "1:929724111839:android:4662ea9a056188c4",
        "android_client_info": {
          "package_name": "org.linphone"
        }
      },
      "oauth_client": [
        {
          "client_id": "929724111839-co5kffto4j7dets7oolvfv0056cvpfbl.apps.googleusercontent.com",
          "client_type": 1,
          "android_info": {
            "package_name": "org.linphone",
            "certificate_hash": "85463a95603f7b6331899b74b85d53d043dcd500"
          }
        },
        {
          "client_id": "929724111839-v5so1tcd65iil7dd7sde8jgii44h8luf.apps.googleusercontent.com",
          "client_type": 3
        }
      ],
      "api_key": [
        {
          "current_key": "AIzaSyCKrwWhkbA7Iy3wpEI8_ZvKOMp5jf6vV6A"
        }
      ]
    },
    {
      "client_info": {
        "mobilesdk_app_id": "1:929724111839:android:3cf90ee1d2f8fcb6",
        "android_client_info": {
          "package_name": "org.linphone.debug"
        }
      },
      "oauth_client": [
        {
          "client_id": "929724111839-v5so1tcd65iil7dd7sde8jgii44h8luf.apps.googleusercontent.com",
          "client_type": 3
        }
      ],
      "api_key": [
        {
          "current_key": "AIzaSyCKrwWhkbA7Iy3wpEI8_ZvKOMp5jf6vV6A"
        }
      ]
    }
  ],
  "configuration_version": "1"
}

//------------------------------------------------------------------------------------

package com.example.pushnotification

import android.app.NotificationChannel
import android.app.NotificationManager
import android.os.Build
import android.util.Log
import androidx.annotation.RequiresApi
import androidx.core.app.NotificationCompat
import com.google.firebase.messaging.FirebaseMessagingService
import com.google.firebase.messaging.RemoteMessage



class MyFirebaseNotificationService : FirebaseMessagingService() {

    companion object {
        private const val TAG = "FCM Notification"
        const val DEFAULT_NOTIFICATION_ID = 0
        const val CHANNEL_ID = "1"
        const val CHANNEL_NAME = "Default"
    }

    override fun onNewToken(token: String) {
        Log.i(TAG, "new FCM token created: $token")
        val notificationManager = getSystemService(NOTIFICATION_SERVICE) as NotificationManager
        createNotificationChannel(notificationManager)
    }

    override fun onMessageReceived(remoteMessage: RemoteMessage) {
        val title = remoteMessage.notification?.title
        val body = remoteMessage.notification?.body

        val notificationManager = getSystemService(NOTIFICATION_SERVICE) as NotificationManager
        val notificationBuilder = NotificationCompat.Builder(this, CHANNEL_ID)
            .setSmallIcon(R.drawable.ic_launcher_foreground)
            .setContentTitle(title)
            .setContentText(body)
            .setAutoCancel(true)

        notificationManager.notify(DEFAULT_NOTIFICATION_ID, notificationBuilder.build())
    }

    private fun createNotificationChannel(notificationManager: NotificationManager) {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channel = NotificationChannel(
                CHANNEL_ID,
                CHANNEL_NAME,
                NotificationManager.IMPORTANCE_HIGH
            )
            notificationManager.createNotificationChannel(channel)
        }
    }
}


//class MyFirebaseNotificationService : FirebaseMessagingService() {
//
//    companion object {
//        private const val TAG = "FCM Notification"
//        const val DEFAULT_NOTIFICATION_ID = 0
//    }
//
//    override fun onNewToken(token: String) {
//        Log.i(TAG, "new FCM token created: $token")
//        val notificationManager = getSystemService(NOTIFICATION_SERVICE) as NotificationManager
//        initNotificationChannel(notificationManager)
//    }
//
//    override fun onMessageReceived(remoteMessage: RemoteMessage) {
//        val title = remoteMessage.notification?.title
//        val body = remoteMessage.notification?.body
//
//        val notificationManager = getSystemService(NOTIFICATION_SERVICE) as NotificationManager
//        val notificationBuilder = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
//            NotificationCompat.Builder(this, "1")
//        } else {
//            NotificationCompat.Builder(this)
//        }
//        notificationBuilder
//            .setSmallIcon(R.drawable.ic_launcher_foreground)
//            .setContentTitle(title)
//            .setContentText(body)
//            .setAutoCancel(true)
//        initNotificationChannel(notificationManager)
//        notificationManager.notify(DEFAULT_NOTIFICATION_ID, notificationBuilder.build())
//    }
//
//    private fun initNotificationChannel(notificationManager: NotificationManager) {
//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
//            notificationManager.createNotificationChannelIfNotExists(
//                channelId = "1",
//                channelName = "Default"
//            )
//        }
//    }
//}
//
//@RequiresApi(Build.VERSION_CODES.O)
//fun NotificationManager.createNotificationChannelIfNotExists(
//    channelId: String,
//    channelName: String,
//    importance: Int = NotificationManager.IMPORTANCE_HIGH
//) {
//    var channel = getNotificationChannel(channelId)
//
//    if (channel == null) {
//        channel = NotificationChannel(
//            channelId,
//            channelName,
//            importance
//        )
//        createNotificationChannel(channel)
//    }
//}

//-------------------------------------------------------------------------------------------------

//{
//  "project_info": {
//    "project_number": "454153719732",
//    "project_id": "myfirebasemessagingservi-6e2ec",
//    "storage_bucket": "myfirebasemessagingservi-6e2ec.appspot.com"
//  },
//  "client": [
//    {
//      "client_info": {
//        "mobilesdk_app_id": "1:454153719732:android:bb0aaaba4f386b3c70ace1",
//        "android_client_info": {
//          "package_name": "org.linphone"
//        }
//      },
//      "oauth_client": [],
//      "api_key": [
//        {
//          "current_key": "AIzaSyDDri1KJ2z3yrwf21sK8tT63vHuLfHlxIA"
//        }
//      ],
//      "services": {
//        "appinvite_service": {
//          "other_platform_oauth_client": []
//        }
//      }
//    }
//  ],
//  "configuration_version": "1"
//}


I am disconnected...